- content_for :page_title, problem.message
- content_for :title_css_class, "err_show #{'resolved' if problem.resolved?}"
- content_for :title, problem.error_class || truncate(problem.message, :length => 32)
- content_for :meta do
  %strong= t('.app') + ':'
  = link_to app.name, app
  %strong= t('.where') + ':'
  = problem.where
  %br
  %strong= t('.environment') + ':'
  = problem.environment
  %strong= t('.first_notice') + ':'
  = problem.first_notice_at&.to_s(:precise)
  %strong= t('.last_notice') + ':'
  = problem.last_notice_at&.to_s(:precise)
- content_for :action_bar do
  - if problem.unresolved?
    %span= link_to t('.resolve'), [:resolve, app, problem], :method => :put,
      :data => { :confirm => problem_confirm('resolve_one') }, :class => 'resolve'
  %span>= link_to t('.up'), (request.env['HTTP_REFERER'] ? :back : app_problems_path(app)), :class => 'up'
  %br

%h4= @notice.try(:message)

- if params[:notice_id]
  %p= t('.notice_by_id', notice_id: params[:notice_id])
- elsif @notices.present?
  = paginate @notices, theme: :notices, param_name: :notice, params: { id: problem.id.to_s }

.tab-bar
  %ul
    %li= link_to t('.summary'), '#summary', :rel => 'summary', :class => 'button'
    %li= link_to t('.backtrace'), '#backtrace', :rel => 'backtrace', :class => 'button'
    - if @notice && @notice.user_attributes.present?
      %li= link_to t('.user'), '#user_attributes', :rel => 'user_attributes', :class => 'button'
    %li= link_to t('.environment'), '#environment', :rel => 'environment', :class => 'button'
    %li= link_to t('.parameters'), '#params', :rel => 'params', :class => 'button'
    %li= link_to t('.session'), '#session', :rel => 'session', :class => 'button'
    %li= link_to t('.occurrences'), '#occurrences', :rel => 'occurrences', :class => 'button'

- if @notice
  #summary
    %h3= t('.summary')
    = render 'notices/summary', :notice => @notice

  #backtrace
    %h3 Backtrace
    = render 'notices/backtrace', :backtrace => @notice.backtrace

  - if @notice.user_attributes.present?
    #user_attributes
      %h3 User
      = render 'notices/user_attributes', :user => @notice.user_attributes

  #environment
    %h3 Environment
    = render 'notices/environment', :notice => @notice

  #params
    %h3 Parameters
    = render 'notices/params', :notice => @notice

  #session
    %h3 Session
    = render 'notices/session', :notice => @notice

#occurrences
  = render partial: 'notices_table', locals: { notices: @all_notices }
